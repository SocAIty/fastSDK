
from fastsdk.api_job_manager import ApiJobManager
from fastsdk.service_management import ServiceManager
from fastsdk.service_interaction.request.file_handler import FileHandler


class APIKeyError(Exception):
    """Custom exception for API key validation errors."""
    def __init__(self, message: str, service_name: str, signup_url: str):
        message = f"{message}\nPlease create an account at {signup_url} and get an API key. Set the API key using environment variable {service_name.upper()}_API_KEY."
        super().__init__(message)


class BaseAPISDK: # probably rename to fastSDK
    """
    This is usually generated by the SDK generator.
    It provides specialized methods for each endpoint.
    It submits jobs to the JobManager.
    It provides method specific hooks.
    """
    def __init__(self, service_name_or_id: str, api_key: str = None, file_handler: FileHandler = None):

        self.service_definition = ServiceManager.get_service(service_name_or_id)
        # try to get api key from global settings if not provided
        self.api_key = api_key or "no_api_key_set_add_globla_settings" # GlobalSettings.get_api_key(self.service_definition.id)
        self.validate_api_key()

        # built the necessary components
        file_handler = file_handler or FileHandler()
        ApiJobManager.add_api_client(self.service_definition.id, api_key=self.api_key)
        ApiJobManager.add_file_handler(self.service_definition.id, file_handler)
        
    def validate_api_key(self):
        return True

    def submit_job(self, endpoint_id: str, **kwargs):
        return ApiJobManager.submit_job(self.service_definition.id, endpoint_id, data=kwargs)


